data <- read.csv("traindata.csv")
# 将数据转换为长格式，适合绘制小提琴图
data1 <- melt(data, id.vars = "id")
# 创建小提琴图并赋值给对象p
p <-ggviolin(data1, x="variable", y="value",
fill="",#填充
palette =c("#B3CDE3","#DECBE4","#F7E5C3"),#设置颜色
add ="boxplot",#添加箱线图
xlab = F, #不显示x轴的标签
legend = "right"#图例显示在右侧
)
p <-ggviolin(data1, x="variable", y="value",
color = "",
fill="",
palette =c("#B3CDE3","#DECBE4","#F7E5C9"),#设置颜色
add = "boxplot",#添加箱线图
add.params = list(color="white"),#设置箱线图边颜色
xlab = F, #不显示x轴的标签
legend = "right"#图例显示在右侧
)
# 保存图为PNG文件，尺寸为600x600像素
ggsave("箱线图1.png", plot = p, width = 12, height = 6, units = "in", dpi = 600)
#下载并调用所需包
if(!require(ggpubr))install.packages("ggpubr")
if(!require(reshape2))install.packages("reshape2")
library(ggpubr)
library(reshape2)
# 读取CSV文件
setwd("C:/Users/A/Desktop/ecnu/draft/regression")
data <- read.csv("traindata.csv")
# 将数据转换为长格式，适合绘制小提琴图
data1 <- melt(data, id.vars = "id")
# 创建小提琴图并赋值给对象p
p <-ggviolin(data1, x="variable", y="value",
fill="red",#填充
palette =c("#B3CDE3","#DECBE4","#F7E5C3"),#设置颜色
add ="boxplot",#添加箱线图
xlab = F, #不显示x轴的标签
legend = "right"#图例显示在右侧
)
p <-ggviolin(data1, x="variable", y="value",
color = "red",
fill="red",
palette =c("#B3CDE3","#DECBE4","#F7E5C9"),#设置颜色
add = "boxplot",#添加箱线图
add.params = list(color="white"),#设置箱线图边颜色
xlab = F, #不显示x轴的标签
legend = "right"#图例显示在右侧
)
# 保存图为PNG文件，尺寸为600x600像素
ggsave("箱线图1.png", plot = p, width = 12, height = 6, units = "in", dpi = 600)
#保存绘图
install.packages("eoffice")
library(eoffice)
topptx(filename="1.pptx",height = 6,width = 9)
#下载并调用所需包
if(!require(ggpubr))install.packages("ggpubr")
if(!require(reshape2))install.packages("reshape2")
library(ggpubr)
library(reshape2)
# 读取CSV文件
setwd("C:/Users/A/Desktop/ecnu/draft/regression")
data <- read.csv("traindata.csv")
# 将数据转换为长格式，适合绘制小提琴图
data1 <- melt(data, id.vars = "id")
# 创建小提琴图并赋值给对象p
p <-ggviolin(data1, x="variable", y="value",
fill="red",#填充
palette =c("#B3CDE3","#DECBE4","#F7E5C3"),#设置颜色
add ="boxplot",#添加箱线图
xlab = F, #不显示x轴的标签
legend = "right"#图例显示在右侧
)
p <-ggviolin(data1, x="variable", y="value",
color = "red",
fill="red",
palette =c("#B3CDE3","#DECBE4","#F7E5C9"),#设置颜色
add = "boxplot",#添加箱线图
add.params = list(color="white"),#设置箱线图边颜色
xlab = F, #不显示x轴的标签
legend = "right"#图例显示在右侧
)
# 保存图为PNG文件，尺寸为600x600像素
ggsave("箱线图1.png", plot = p, width = 12, height = 6, units = "in", dpi = 600)
#保存绘图
install.packages("eoffice")
library(eoffice)
topptx(filename="1.pptx",height = 6,width = 9)
#下载并调用所需包
if(!require(ggpubr))install.packages("ggpubr")
if(!require(reshape2))install.packages("reshape2")
library(ggpubr)
library(reshape2)
# 读取CSV文件
setwd("C:/Users/A/Desktop/ecnu/draft/regression")
data <- read.csv("traindata.csv")
# 将数据转换为长格式，适合绘制小提琴图
data1 <- melt(data, id.vars = "id")
# 创建小提琴图并赋值给对象p
p <-ggviolin(data1, x="variable", y="value",
fill="red",#填充
palette =c("#B3CDE3","#DECBE4","#F7E5C3"),#设置颜色
add ="boxplot",#添加箱线图
xlab = F, #不显示x轴的标签
legend = "right"#图例显示在右侧
)
p <-ggviolin(data1, x="variable", y="value",
color = "red",
fill="red",
palette =c("#B3CDE3","#DECBE4","#F7E5C9"),#设置颜色
add = "boxplot",#添加箱线图
add.params = list(color="white"),#设置箱线图边颜色
xlab = F, #不显示x轴的标签
legend = "right"#图例显示在右侧
)
# 保存图为PNG文件，尺寸为600x600像素
ggsave("箱线图1.png", plot = p, width = 12, height = 6, units = "in", dpi = 600)
#保存绘图
install.packages("eoffice")
library(eoffice)
topptx(filename="1.pptx",height = 6,width = 9)
#下载并调用所需包
if(!require(ggpubr))install.packages("ggpubr")
if(!require(reshape2))install.packages("reshape2")
library(ggpubr)
library(reshape2)
# 读取CSV文件
setwd("C:/Users/A/Desktop/ecnu/draft/regression")
data <- read.csv("traindata.csv")
# 将数据转换为长格式，适合绘制小提琴图
data1 <- melt(data, id.vars = "id")
# 创建小提琴图并赋值给对象p
p <-ggviolin(data1, x="variable", y="value",
fill="red",#填充
palette =c("#B3CDE3","#DECBE4","#F7E5C3"),#设置颜色
add ="boxplot",#添加箱线图
xlab = F, #不显示x轴的标签
legend = "right"#图例显示在右侧
)
p <-ggviolin(data1, x="variable", y="value",
color = "red",
fill="red",
palette =c("#B3CDE3","#DECBE4","#F7E5C9"),#设置颜色
add = "boxplot",#添加箱线图
add.params = list(color="white"),#设置箱线图边颜色
xlab = F, #不显示x轴的标签
legend = "right"#图例显示在右侧
)
# 保存图为PNG文件，尺寸为600x600像素
ggsave("箱线图1.png", plot = p, width = 12, height = 6, units = "in", dpi = 600)
#保存绘图
install.packages("eoffice")
library(eoffice)
topptx(filename="1.pptx",height = 6,width = 9)
#下载并调用所需包
if(!require(ggpubr))install.packages("ggpubr")
if(!require(reshape2))install.packages("reshape2")
library(ggpubr)
library(reshape2)
# 读取CSV文件
setwd("C:/Users/A/Desktop/ecnu/draft/regression")
data <- read.csv("traindata.csv")
# 将数据转换为长格式，适合绘制小提琴图
data1 <- melt(data, id.vars = "id")
# 创建小提琴图并赋值给对象p
p <-ggviolin(data1, x="variable", y="value",
fill="red",#填充
palette =c("#B3CDE3","#DECBE4","#F7E5C3"),#设置颜色
add ="boxplot",#添加箱线图
xlab = F, #不显示x轴的标签
legend = "right"#图例显示在右侧
)
p <-ggviolin(data1, x="variable", y="value",
color = "red",
fill="red",
palette =c("#B3CDE3","#DECBE4","#F7E5C9"),#设置颜色
add = "boxplot",#添加箱线图
add.params = list(color="white"),#设置箱线图边颜色
xlab = F, #不显示x轴的标签
legend = "right"#图例显示在右侧
)
# 保存图为PNG文件，尺寸为600x600像素
ggsave("箱线图1.png", plot = p, width = 12, height = 6, units = "in", dpi = 600)
#保存绘图
install.packages("eoffice")
library(eoffice)
topptx(filename="1.pptx",height = 6,width = 9)
install.packages("eoffice")
#下载并调用所需包
if(!require(ggpubr))install.packages("ggpubr")
if(!require(reshape2))install.packages("reshape2")
library(ggpubr)
library(reshape2)
# 读取CSV文件
setwd("C:/Users/A/Desktop/ecnu/draft/regression")
data <- read.csv("traindata.csv")
# 将数据转换为长格式，适合绘制小提琴图
data1 <- melt(data, id.vars = "id")
# 创建小提琴图并赋值给对象p
p <-ggviolin(data1, x="variable", y="value",
fill="red",#填充
palette =c("#B3CDE3","#DECBE4","#F7E5C3"),#设置颜色
add ="boxplot",#添加箱线图
xlab = F, #不显示x轴的标签
legend = "right"#图例显示在右侧
)
p <-ggviolin(data1, x="variable", y="value",
color = "red",
fill="red",
palette =c("#B3CDE3","#DECBE4","#F7E5C9"),#设置颜色
add = "boxplot",#添加箱线图
add.params = list(color="white"),#设置箱线图边颜色
xlab = F, #不显示x轴的标签
legend = "right"#图例显示在右侧
)
# 保存图为PNG文件，尺寸为600x600像素
ggsave("箱线图1.png", plot = p, width = 12, height = 6, units = "in", dpi = 600)
#保存绘图
install.packages("eoffice")
library(eoffice)
topptx(filename="1.pptx",height = 6,width = 9)
install.packages("eoffice")
#下载并调用所需包
if(!require(ggpubr))install.packages("ggpubr")
if(!require(reshape2))install.packages("reshape2")
library(ggpubr)
library(reshape2)
# 读取CSV文件
setwd("C:/Users/A/Desktop/ecnu/draft/regression")
data <- read.csv("traindata.csv")
# 将数据转换为长格式，适合绘制小提琴图
data1 <- melt(data, id.vars = "id")
# 创建小提琴图并赋值给对象p
p <-ggviolin(data1, x="variable", y="value",
fill="red",#填充
palette =c("#B3CDE3","#DECBE4","#F7E5C3"),#设置颜色
add ="boxplot",#添加箱线图a
xlab = F, #不显示x轴的标签
legend = "right"#图例显示在右侧
)
p <-ggviolin(data1, x="variable", y="value",
color = "red",
fill="red",
palette =c("#B3CDE3","#DECBE4","#F7E5C9"),#设置颜色
add = "boxplot",#添加箱线图
add.params = list(color="white"),#设置箱线图边颜色
xlab = F, #不显示x轴的标签
legend = "right"#图例显示在右侧
)
# 保存图为PNG文件，尺寸为600x600像素
ggsave("箱线图1.png", plot = p, width = 12, height = 6, units = "in", dpi = 600)
#保存绘图
install.packages("eoffice")
if(!require(eoffice))install.packages("eoffice")
library(eoffice)
topptx(filename="1.pptx",height = 6,width = 9)
#下载并调用所需包
if(!require(ggpubr))install.packages("ggpubr")
if(!require(reshape2))install.packages("reshape2")
library(ggpubr)
library(reshape2)
# 读取CSV文件
setwd("C:/Users/A/Desktop/ecnu/draft/regression")
data <- read.csv("traindata.csv")
# 将数据转换为长格式，适合绘制小提琴图
data1 <- melt(data, id.vars = "id")
# 创建小提琴图并赋值给对象p
p <-ggviolin(data1, x="variable", y="value",
fill="red",#填充
palette =c("#B3CDE3","#DECBE4","#F7E5C3"),#设置颜色
add ="boxplot",#添加箱线图a
xlab = F, #不显示x轴的标签
legend = "right"#图例显示在右侧
)
p <-ggviolin(data1, x="variable", y="value",
color = "red",
fill="green",
palette =c("#B3CDE3","#DECBE4","#F7E5C9"),#设置颜色
add = "boxplot",#添加箱线图
add.params = list(color="white"),#设置箱线图边颜色
xlab = F, #不显示x轴的标签
legend = "right"#图例显示在右侧
)
# 保存图为PNG文件，尺寸为600x600像素
ggsave("箱线图1.png", plot = p, width = 12, height = 6, units = "in", dpi = 600)
#保存绘图
install.packages("eoffice")
if(!require(eoffice))install.packages("eoffice")
library(eoffice)
topptx(filename="1.pptx",height = 6,width = 9)
install.packages("eoffice")
#下载并调用所需包
if(!require(ggpubr))install.packages("ggpubr")
if(!require(reshape2))install.packages("reshape2")
library(ggpubr)
library(reshape2)
# 读取CSV文件
setwd("C:/Users/A/Desktop/ecnu/draft/regression")
data <- read.csv("traindata.csv")
# 将数据转换为长格式，适合绘制小提琴图
data1 <- melt(data, id.vars = "id")
# 创建小提琴图并赋值给对象p
p <-ggviolin(data1, x="variable", y="value",
fill="red",#填充
palette =c("#B3CDE3","#DECBE4","#F7E5C3"),#设置颜色
add ="boxplot",#添加箱线图a
xlab = F, #不显示x轴的标签
legend = "right"#图例显示在右侧
)
p <-ggviolin(data1, x="variable", y="value",
color = "red",
fill="green",
palette =c("#B3CDE3","#DECBE4","#F7E5C9"),#设置颜色
add = "boxplot",#添加箱线图
add.params = list(color="white"),#设置箱线图边颜色
xlab = F, #不显示x轴的标签
legend = "right"#图例显示在右侧
)
# 保存图为PNG文件，尺寸为600x600像素
ggsave("箱线图1.png", plot = p, width = 12, height = 6, units = "in", dpi = 600)
#保存绘图
if(!require(eoffice))install.packages("eoffice")
library(eoffice)
topptx(filename="1.pptx",height = 6,width = 9)
#下载并调用所需包
if(!require(ggpubr))install.packages("ggpubr")
if(!require(reshape2))install.packages("reshape2")
library(ggpubr)
library(reshape2)
# 读取CSV文件
setwd("C:/Users/A/Desktop/ecnu/draft/regression")
data <- read.csv("traindata.csv")
# 将数据转换为长格式，适合绘制小提琴图
data1 <- melt(data, id.vars = "id")
# 创建小提琴图并赋值给对象p
p <-ggviolin(data1, x="variable", y="value",
fill="red",#填充
palette =c("#B3CDE3","#DECBE4","#F7E5C3"),#设置颜色
add ="boxplot",#添加箱线图a
xlab = F, #不显示x轴的标签
legend = "right"#图例显示在右侧
)
p <-ggviolin(data1, x="variable", y="value",
color = "red",
fill="green",
palette =c("#B3CDE3","#DECBE4","#F7E5C9"),#设置颜色
add = "boxplot",#添加箱线图
add.params = list(color="white"),#设置箱线图边颜色
xlab = F, #不显示x轴的标签
legend = "right"#图例显示在右侧
)
# 保存图为PNG文件，尺寸为600x600像素
ggsave("箱线图1.png", plot = p, width = 12, height = 6, units = "in", dpi = 600)
#保存绘图
if(!require(eoffice))install.packages("eoffice")
library(eoffice)
topptx(filename="1.pptx",height = 6,width = 9)
dev.list()
dev.new()
#下载并调用所需包
if(!require(ggpubr))install.packages("ggpubr")
if(!require(reshape2))install.packages("reshape2")
library(ggpubr)
library(reshape2)
# 读取CSV文件
setwd("C:/Users/A/Desktop/ecnu/draft/regression")
data <- read.csv("traindata.csv")
# 将数据转换为长格式，适合绘制小提琴图
data1 <- melt(data, id.vars = "id")
# 创建小提琴图并赋值给对象p
p <-ggviolin(data1, x="variable", y="value",
fill="red",#填充
palette =c("#B3CDE3","#DECBE4","#F7E5C3"),#设置颜色
add ="boxplot",#添加箱线图a
xlab = F, #不显示x轴的标签
legend = "right"#图例显示在右侧
)
p <-ggviolin(data1, x="variable", y="value",
color = "red",
fill="green",
palette =c("#B3CDE3","#DECBE4","#F7E5C9"),#设置颜色
add = "boxplot",#添加箱线图
add.params = list(color="white"),#设置箱线图边颜色
xlab = F, #不显示x轴的标签
legend = "right"#图例显示在右侧
)
# 保存图为PNG文件，尺寸为600x600像素
ggsave("箱线图1.png", plot = p, width = 12, height = 6, units = "in", dpi = 600)
#保存绘图
if(!require(eoffice))install.packages("eoffice")
library(eoffice)
topptx(filename="1.pptx",height = 6,width = 9)
#下载并调用所需包
if(!require(ggpubr))install.packages("ggpubr")
if(!require(reshape2))install.packages("reshape2")
library(ggpubr)
library(reshape2)
# 读取CSV文件
setwd("C:/Users/A/Desktop/ecnu/draft/regression")
data <- read.csv("traindata.csv")
# 将数据转换为长格式，适合绘制小提琴图
data1 <- melt(data, id.vars = "id")
# 创建小提琴图并赋值给对象p
p <-ggviolin(data1, x="variable", y="value",
fill="red",#填充
palette =c("#B3CDE3","#DECBE4","#F7E5C3"),#设置颜色
add ="boxplot",#添加箱线图a
xlab = F, #不显示x轴的标签
legend = "right"#图例显示在右侧
)
p <-ggviolin(data1, x="variable", y="value",
color = "red",
fill="green",
palette =c("#B3CDE3","#DECBE4","#F7E5C9"),#设置颜色
add = "boxplot",#添加箱线图
add.params = list(color="white"),#设置箱线图边颜色
xlab = F, #不显示x轴的标签
legend = "right"#图例显示在右侧
)
# 保存图为PNG文件，尺寸为600x600像素
ggsave("箱线图1.png", plot = p, width = 12, height = 6, units = "in", dpi = 600)
#保存绘图
if(!require(eoffice))install.packages("eoffice")
library(eoffice)
topptx(filename="1.pptx",height = 6,width = 9)
# 下载并调用所需包
if(!require(ggpubr)) install.packages("ggpubr")
if(!require(reshape2)) install.packages("reshape2")
if(!require(eoffice)) install.packages("eoffice")
library(ggpubr)
library(reshape2)
library(eoffice)
# 读取CSV文件
setwd("C:/Users/A/Desktop/ecnu/draft/regression")
data <- read.csv("traindata.csv")
# 将数据转换为长格式，适合绘制小提琴图
data1 <- melt(data, id.vars = "id")
# 创建小提琴图并赋值给对象p
p <- ggviolin(data1, x = "variable", y = "value",
fill = "green",
palette = c("#B3CDE3", "#DECBE4", "#F7E5C9"), # 设置颜色
add = "boxplot", # 添加箱线图
add.params = list(color = "white"), # 设置箱线图边颜色
xlab = FALSE, # 不显示x轴的标签
legend = "right" # 图例显示在右侧
)
# 打印图形，确保图形成功生成
print(p)
# 保存图为PNG文件，尺寸为600x600像素
ggsave("箱线图1.png", plot = p, width = 12, height = 6, units = "in", dpi = 600)
# 保存绘图到PPT文件
topptx(filename = "1.pptx", height = 6, width = 9)
# 将图形插入到PPT中
ph_with_gg(doc = "1.pptx", code = print(p), location = ph_location_fullsize())
# 下载并调用所需包
if(!require(ggpubr)) install.packages("ggpubr")
if(!require(reshape2)) install.packages("reshape2")
if(!require(eoffice)) install.packages("eoffice")
library(ggpubr)
library(reshape2)
library(eoffice)
# 读取CSV文件
setwd("C:/Users/A/Desktop/ecnu/draft/regression")
data <- read.csv("traindata.csv")
# 将数据转换为长格式，适合绘制小提琴图
data1 <- melt(data, id.vars = "id")
# 创建小提琴图并赋值给对象p
p <- ggviolin(data1, x = "variable", y = "value",
fill = "green",
palette = c("#B3CDE3", "#DECBE4", "#F7E5C9"), # 设置颜色
add = "boxplot", # 添加箱线图
add.params = list(color = "white"), # 设置箱线图边颜色
xlab = FALSE, # 不显示x轴的标签
legend = "right" # 图例显示在右侧
)
# 打印图形，确保图形成功生成
print(p)
# 保存图为PNG文件，尺寸为600x600像素
ggsave("箱线图1.png", plot = p, width = 12, height = 6, units = "in", dpi = 600)
# 保存绘图到PPT文件
doc <- topptx(filename = "1.pptx", height = 6, width = 9)
# 将图形插入到PPT中
ph_with(doc, dml(code = print(p)), location = ph_location_fullsize())
# 下载并调用所需包
if(!require(ggpubr)) install.packages("ggpubr")
if(!require(reshape2)) install.packages("reshape2")
if(!require(eoffice)) install.packages("eoffice")
library(ggpubr)
library(reshape2)
library(eoffice)
# 读取CSV文件
setwd("C:/Users/A/Desktop/ecnu/draft/regression")
data <- read.csv("traindata.csv")
# 将数据转换为长格式，适合绘制小提琴图
data1 <- melt(data, id.vars = "id")
# 创建小提琴图并赋值给对象p
p <- ggviolin(data1, x = "variable", y = "value",
fill = "green",
palette = c("#B3CDE3", "#DECBE4", "#F7E5C9"), # 设置颜色
add = "boxplot", # 添加箱线图
add.params = list(color = "white"), # 设置箱线图边颜色
xlab = FALSE, # 不显示x轴的标签
legend = "right" # 图例显示在右侧
)
# 打印图形，确保图形成功生成
print(p)
# 保存绘图到PPT文件
doc <- read_pptx()  # 创建一个新的PowerPoint文档
contributors()
demo()
demo(package = .packages(all.available = TRUE))
citation()
